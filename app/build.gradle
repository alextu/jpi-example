/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id("org.jenkins-ci.jpi") version "0.49.0-rc.1"
}

jenkinsPlugin {
    // Version of Jenkins core this plugin depends on.
    jenkinsVersion.set("2.138.4")

    // Human-readable name of plugin.
    displayName = "Gradle Plugin"

    // Plugin ID, defaults to the project name without trailing '-plugin'
    shortName = "jpi-example"

    fileExtension = "hpi"

    compatibleSinceVersion = "1.0"

    gitVersion {
        allowDirty = true
        gitRoot = rootProject.projectDir
    }

    enableSpotBugs()
    enableCheckstyle()
    enableJacoco()
}

checkstyle {
  ignoreFailures = true
}


repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.0.1-jre'
}

application {
    // Define the main class for the application.
    mainClass = 'jpi.example.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
